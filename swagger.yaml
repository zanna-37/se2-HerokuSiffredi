swagger: "2.0"
info:
    version: '1.0'
    title: 'SE2-HerokuSiffredi'
    description: ''
    license:
        name: MIT
        url: https://github.com/zanna-37/se2-HerokuSiffredi
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
    /tasks:
        get:
            summary: Returns a list of all tasks.
            tags:
            - tasks
            responses:
                200:
                    description: Array of Task objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Task'
        post:
            summary: Create a new Task
            tags:
            - tasks
            parameters:
            -   in: body
                name: task
                description: The Task that needs to be created
                schema:
                    type: object
                    properties:
                        exerciseText:
                            type: string
                        answers:
                            type: array
                            items:
                                type: object
                                properties:
                                    answer:
                                        type: string
                                    isRight:
                                        type: boolean
                        totalPoints:
                            type: number
                            minimum: 0
                        categoryID:
                            type: integer
                            minimum: 0
                        latestChange:
                            type: string
                            format: date-time
                    required:
                    - exerciseText
                    - totalPoints
                    - categoryID
            responses:
                201:
                    description: Task created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: Task ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some tasks
            tags:
            - tasks
            parameters:
            -   in: body
                name: tasks
                description: Batch of Tasks to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/Task'
            responses:
                204:
                    description: Updated Tasks
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            tags:
            - tasks
            parameters:
            -   in: body
                name: taskIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Tasks
                404:
                    description: Tasks not found
                    schema:
                        $ref: '#/definitions/Error'

    /tasks/{id}:
        get:
            summary: Returns a specific task
            tags:
            - tasks
            parameters:
            -   in: path
                name: id
                description: ID of task
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: Task object with given ID
                    schema:
                        $ref: '#/definitions/Task'
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'
        post:
            summary: Not supported
            deprecated: true
            tags:
            - tasks
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific task
            tags:
            - tasks
            parameters:
            -   in: path
                name: id
                description: ID of task
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: task
                schema:
                    $ref: '#/definitions/Task'
            responses:
                204:
                    description: Updated Task
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific task
            tags:
            - tasks
            parameters:
            -   in: path
                name: id
                description: ID of task
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted Task
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /task-corrections:
        get:
            summary: Returns a list of all task corrections for an exam.
            tags:
            - task corrections
            parameters:
            -   in: body
                name: examID
                schema:
                    type: object
                    properties:
                        examID:
                            type: integer
                            minimum: 0
            responses:
                200:
                    description: Array of task corrections
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TaskCorrection'
        post:
            summary: Create a new task correction
            tags:
            - task corrections
            parameters:
            -   in: body
                name: task
                description: The new task correction
                schema:
                    type: object
                    properties:
                        submissionID:
                            type: integer
                            minimum: 0
                        examID:
                            type: integer
                            minimum: 0
                        mark:
                            type: number
                        comment:
                            type: string
                        userProposerID:
                            type: integer
                            minimum: 0
                    required:
                    - submissionID
                    - examID
                    - mark
                    - userProposerID
            responses:
                201:
                    description: Task corrected
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: TaskCorrection ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some task corrections
            tags:
            - task corrections
            parameters:
            -   in: body
                name: task-correcitons
                description: Batch of task corrections to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/TaskCorrection'
            responses:
                204:
                    description: Updated Task corrections
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of task corrections
            tags:
            - task corrections
            parameters:
            -   in: body
                name: taskCorrectionIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted task corrections
                404:
                    description: Task corrections not found
                    schema:
                        $ref: '#/definitions/Error'

    /task-corrections/{id}:
        get:
            summary: Returns a specific task correction
            tags:
            - task corrections
            parameters:
            -   in: path
                name: id
                description: ID of task correction
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: Task correction with given ID
                    schema:
                        $ref: '#/definitions/TaskCorrection'
                404:
                    description: No task correction for that ID
                    schema:
                        $ref: '#/definitions/Error'
        post:
            summary: Not supported
            deprecated: true
            tags:
            - task corrections
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific task correction
            tags:
            - task corrections
            parameters:
            -   in: path
                name: id
                description: ID of task correction
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: task correction
                schema:
                    $ref: '#/definitions/TaskCorrection'
            responses:
                204:
                    description: Updated task correction
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No task correction for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific task correction
            tags:
            - task corrections
            parameters:
            -   in: path
                name: id
                description: ID of task correction
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted task correction
                404:
                    description: No task correction for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /task-categories:
        get:
            summary: Returns a list of all task categories
            tags:
            - task categories
            responses:
                200:
                    description: Array of TaskCategory objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TaskCategory'
        post:
            summary: Create a new task category
            tags:
            - task categories
            parameters:
            -   in: body
                name: task-category
                description: The TaskCategory that needs to be created
                schema:
                    type: object
                    properties:
                        name:
                            type: string
                    required:
                    - name
            responses:
                201:
                    description: TaskCategory created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: TaskCategory ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some task categories
            tags:
            - task categories
            parameters:
            -   in: body
                name: task-categories
                description: Batch of TaskCategory to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/TaskCategory'
            responses:
                204:
                    description: Updated Task Categories
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            tags:
            - task categories
            parameters:
            -   in: body
                name: task-categoryIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Task Categories
                404:
                    description: TaskCategory not found
                    schema:
                        $ref: '#/definitions/Error'

    /task-categories/{id}:
        get:
            summary: Returns a specific task category
            tags:
            - task categories
            parameters:
            -   in: path
                name: id
                description: ID of task category
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: TaskCategory object with given ID
                    schema:
                        $ref: '#/definitions/TaskCategory'
                400:
                    description: Specified ID is not valid
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No TaskCategory for that ID
                    schema:
                        $ref: '#/definitions/Error'
        post:
            summary: Not supported
            deprecated: true
            tags:
            - task categories
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific task category
            tags:
            - task categories
            parameters:
            -   in: path
                name: id
                description: ID of task category
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: task-category
                schema:
                    $ref: '#/definitions/TaskCategory'
            responses:
                204:
                    description: Updated TaskCategory
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No TaskCategory for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific task category
            tags:
            - task categories
            parameters:
            -   in: path
                name: id
                description: ID of task category
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted Task
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /users:
        get:
            summary: Returns a list of all users
            tags:
            - users
            responses:
                200:
                    description: Array of User objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
        post:
            summary: Create a new User
            tags:
            - users
            parameters:
            -   in: body
                name: user
                description: The User that needs to be created
                schema:
                    type: object
                    properties:
                        studentNumber:
                            type: integer
                            minimum: 0
                        name:
                            type: string
                        surname:
                            type: string
                    required:
                    - studentNumber
                    - name
                    - surname
            responses:
                201:
                    description: User created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: User ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some tasks
            tags:
            - users
            parameters:
            -   in: body
                name: tasks
                description: Batch of users to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/User'
            responses:
                204:
                    description: Updated Users
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            tags:
            - users
            parameters:
            -   in: body
                name: taskIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Users
                404:
                    description: Users not found
                    schema:
                        $ref: '#/definitions/Error'

    /users/{id}:
        get:
            summary: Returns a specific user
            tags:
            - users
            parameters:
            -   in: path
                name: id
                description: ID of user
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: User object with given ID
                    schema:
                        $ref: '#/definitions/User'
                400:
                    description: Specified ID is not valid
                404:
                    description: No User for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - users
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific user
            tags:
            - users
            parameters:
            -   in: path
                name: id
                description: ID of user
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: user
                schema:
                    $ref: '#/definitions/User'
            responses:
                204:
                    description: Updated User
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No User for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific user
            tags:
            - users
            parameters:
            -   in: path
                name: id
                description: ID of user
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted User
                404:
                    description: No User for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /courses:
        get:
            summary: Returns a list of all courses
            tags:
            - courses
            responses:
                200:
                    description: Array of Course objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Course'
        post:
            summary: Create a new Course
            tags:
            - courses
            parameters:
            -   in: body
                name: course
                description: The course that needs to be created
                schema:
                    type: object
                    properties:
                        name:
                            type: string
                        academicYear:
                            type: string
                            pattern: '^\d{4}\/\d{4}$'
                    required:
                    - name
            responses:
                201:
                    description: Course created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: Course ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some courses
            tags:
            - courses
            parameters:
            -   in: body
                name: courses
                description: Batch of courses to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/Course'
            responses:
                204:
                    description: Updated Course
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of courses
            tags:
            - courses
            parameters:
            -   in: body
                name: coursesIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Courses
                404:
                    description: Courses not found
                    schema:
                        $ref: '#/definitions/Error'

    /courses/{id}:
        get:
            summary: Returns a specific course
            tags:
            - courses
            parameters:
            -   in: path
                name: id
                description: ID of course
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: Course object with given ID
                    schema:
                        $ref: '#/definitions/Course'
                400:
                    description: Specified ID is not valid
                404:
                    description: No Course for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - courses
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific course
            tags:
            - courses
            parameters:
            -   in: path
                name: id
                description: ID of course
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: course
                schema:
                    $ref: '#/definitions/Course'
            responses:
                204:
                    description: Updated Course
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Course for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific course
            tags:
            - courses
            parameters:
            -   in: path
                name: id
                description: ID of course
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted Course
                404:
                    description: No Course for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /exams:
        get:
            summary: Returns all Exam events
            tags:
            - exams
            responses:
                200:
                    description: Array of Exam events
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExamEvent'
        post:
            summary: Create a new Exam event
            tags:
            - exams
            parameters:
            -   in: body
                name: exam-event
                description: The exam that needs to be created
                schema:
                    type: object
                    properties:
                        examTemplateID:
                            type: integer
                            minimum: 0
                        ownersIDs:
                            type: array
                            items:
                                type: integer
                                minimum: 0
                        avgMark:
                            type: number
                        defaultDeadlineStart:
                            type: string
                            format: date-time
                        defaultDeadlineEnd:
                            type: string
                            format: date-time
                    required:
                    - ownersIDs
                    - examTemplateID
                    - defaultDeadlineEnd
            responses:
                201:
                    description: Exam event created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: Exam event ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some exam events
            tags:
            - exams
            parameters:
            -   in: body
                name: exam-events
                description: Batch of Exam events to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/ExamEvent'
            responses:
                204:
                    description: Updated Exam event
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of exam events
            tags:
            - exams
            parameters:
            -   in: body
                name: examsIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Exam events
                404:
                    description: Exam events not found
                    schema:
                        $ref: '#/definitions/Error'

    /exams/{id}:
        get:
            summary: Returns a specific Exam event
            tags:
            - exams
            parameters:
            -   in: path
                name: id
                description: ID of Exam event
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: Exam event object with given ID
                    schema:
                        $ref: '#/definitions/ExamEvent'
                400:
                    description: Specified ID is not valid
                404:
                    description: No Exam event for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - exams
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific exam
            tags:
            - exams
            parameters:
            -   in: path
                name: id
                description: ID of exam event
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: exam
                schema:
                    $ref: '#/definitions/ExamEvent'
            responses:
                204:
                    description: Updated Exam event
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Exam event for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific Exam event
            tags:
            - exams
            parameters:
            -   in: path
                name: id
                description: ID of Exam event
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted Exam event
                404:
                    description: No Exam event for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /exam-templates:
        get:
            summary: Returns all Exam templates
            tags:
            - exam templates
            responses:
                200:
                    description: Array of Exam templates
                    schema:
                        $ref: '#/definitions/ExamTemplate'
        post:
            summary: Create a new Exam template
            tags:
            - exam templates
            parameters:
            -   in: body
                name: exam-template
                description: The exam template that needs to be created
                schema:
                    type: object
                    properties:
                        name:
                            type: string
                        questions:
                            type: array
                            items:
                                type: object
                                properties:
                                    taskCategoryID:
                                        type: integer
                                        minimum: 0
                                    numberOfQuestions:
                                        type: integer
                                        minimum: 1
                    required:
                    - name
                    - questions
            responses:
                201:
                    description: Exam template created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: Exam template ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some exam templates
            tags:
            - exam templates
            parameters:
            -   in: body
                name: exam-templates
                description: Batch of exam-templates to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/ExamTemplate'
            responses:
                204:
                    description: Updated Exam template
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of exam templates
            tags:
            - exam templates
            parameters:
            -   in: body
                name: examtemplatesIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Exam templates
                404:
                    description: Exam templates not found
                    schema:
                        $ref: '#/definitions/Error'

    /exam-templates/{id}:
        get:
            summary: Returns a specific Exam template
            tags:
            - exam templates
            parameters:
            -   in: path
                name: id
                description: ID of Exam template
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: Exam template object with given ID
                    schema:
                        $ref: '#/definitions/ExamTemplate'
                400:
                    description: Specified ID is not valid
                404:
                    description: No Exam template for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - exam templates
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific exam template
            tags:
            - exam templates
            parameters:
            -   in: path
                name: id
                description: ID of exam template
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: exam-template
                schema:
                    $ref: '#/definitions/ExamTemplate'
            responses:
                204:
                    description: Updated Exam Template
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Exam Template for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific exam template
            tags:
            - exam templates
            parameters:
            -   in: path
                name: id
                description: ID of course
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted Exam Template
                404:
                    description: No Exam Template for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /exam-instances:
        get:
            summary: Returns all instances of an exam
            tags:
            - exam instances
            description: Returns all instances of a exam
            responses:
                200:
                    description: All exam instances
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ExamInstance'
        post:
            summary: Create an exam instance for a user
            tags:
            - exam instances
            description: Creates an instance of that exam for that user
            parameters:
            -   in: body
                name: atomic-exam
                schema:
                    properties:
                        usersID:
                            type: array
                            items:
                                type: integer
                                minimum: 0
                        examID:
                            type: integer
                            minimum: 0
                        assignedTaskIDs:
                            type: array
                            items:
                                type: integer
                                minimum: 0
            responses:
                201:
                    description: Created exam instance
                    schema:
                        type: object
                        properties:
                            examInstanceID:
                                type: integer
                                minimum: 0
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some exam instances
            tags:
            - exam instances
            parameters:
            -   in: body
                name: exam-instances
                description: Batch of exam instances to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/ExamInstance'
            responses:
                204:
                    description: Updated exam instances
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of exam instances
            tags:
            - exam instances
            parameters:
            -   in: body
                name: examInstanceIDs
                schema:
                    type: array
                    items:
                        type: integer
                        minimum: 0
            responses:
                204:
                    description: Deleted Exam instances
                404:
                    description: Exam instances not found
                    schema:
                        $ref: '#/definitions/Error'

    /exam-instances/{id}:
        get:
            summary: Returns a specific exam instance
            tags:
            - exam instances
            parameters:
            -   in: path
                name: id
                description: ID of exam instance
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: exam instance with given ID
                    schema:
                        $ref: '#/definitions/ExamInstance'
                400:
                    description: Specified ID is not valid
                404:
                    description: No exam instance for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - exam instances
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific exam instance
            tags:
            - exam instances
            parameters:
            -   in: path
                name: id
                description: ID of exam instance
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: examInstance
                schema:
                    $ref: '#/definitions/ExamInstance'
            responses:
                204:
                    description: Updated exam instance
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No exam instance for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific exam instance
            tags:
            - exam instances
            parameters:
            -   in: path
                name: id
                description: ID of exams instance
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted exam instance
                404:
                    description: No exam instance for that ID
                    schema:
                        $ref: '#/definitions/Error'
        patch:
            summary: Final evaluation of exam instance
            tags:
            - exam instances
            parameters:
            -   in: path
                name: id
                description: ID of exam instance
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: examInstance
                schema:
                    properties:
                        finalEvaluation:
                            type: object
                            properties:
                                evaluatorUserID:
                                    type: integer
                                    minimum: 0
                                finalMark:
                                    type: number
                                    minimum: 0
                                comment:
                                    type: string
            responses:
                204:
                    description: Added final evaluation of exam for the student
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: Exam not found
                    schema:
                        $ref: '#/definitions/Error'

    /submissions:
        get:
            summary: Not supported
            deprecated: true
            tags:
            - submissions
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'

        post:
            summary: New Submission
            tags:
            - submissions
            parameters:
            -   in: body
                name: submission
                description: The submission that must be created
                schema:
                    type: object
                    properties:
                        examID:
                            type: integer
                            minimum: 0
                        userID:
                            type: integer
                            minimum: 0
                        assignedTaskID:
                            type: integer
                            minimum: 0
                        userAnswer:
                            type: string
                        finalCorrectionID:
                            type: integer
                            minimum: 0
                    required:
                    - examID
                    - userID
                    - assignedTaskID
                    - userAnswer
            responses:
                201:
                    description: Submission created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                minimum: 0
                                description: Submission ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'

        put:
            summary: Update some submissions
            tags:
            - submissions
            parameters:
            -   in: body
                name: submissions
                description: Batch of submissions to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/Submission'
            responses:
                204:
                    description: Updated Submission
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'

        delete:
            summary: Delete some submissions
            tags:
            - submissions
            responses:
                204:
                    description: Deleted Submission
                404:
                    description: No Submission for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /submissions/{id}:
        get:
            summary: Returns a specific submission
            tags:
            - submissions
            parameters:
            -   in: path
                name: id
                description: ID of submission
                required: true
                type: integer
                minimum: 0
            responses:
                200:
                    description: submission with given ID
                    schema:
                        $ref: '#/definitions/Submission'
                400:
                    description: Specified ID is not valid
                404:
                    description: No submission for that ID
        post:
            summary: Not supported
            deprecated: true
            tags:
            - submissions
            parameters:
            -   in: path
                name: id
                required: true
                type: integer
                minimum: 0
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific submission
            tags:
            - submissions
            parameters:
            -   in: path
                name: id
                description: ID of submission
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: submission
                schema:
                    $ref: '#/definitions/Submission'
            responses:
                204:
                    description: Updated Submission
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Submission for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific Submission
            tags:
            - submissions
            parameters:
            -   in: path
                name: id
                description: ID of submission
                required: true
                type: integer
                minimum: 0
            responses:
                204:
                    description: Deleted submission
                404:
                    description: No submission for that ID
                    schema:
                        $ref: '#/definitions/Error'

        patch:
            summary: Correction submitted by the professor
            tags:
            - submissions
            parameters:
            -   in: path
                name: id
                description: ID of submission
                required: true
                type: integer
                minimum: 0
            -   in: body
                name: correction
                schema:
                    properties:
                        submissionID:
                            type: integer
                            minimum: 0
                        finalCorrectionID:
                            type: integer
                            minimum: 0
                    required:
                    - submissionID
                    - finalCorrectionID
            responses:
                204:
                    description: Sumbission corrected
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No submission for that ID
                    schema:
                        $ref: '#/definitions/Error'

definitions:
    Task:
        title: Task
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            exerciseText:
                type: string
            answers:
                type: array
                items:
                    type: object
                    properties:
                        answer:
                            type: string
                        isRight:
                            type: boolean
            totalPoints:
                type: number
                minimum: 0
            categoryID:
                type: integer
                minimum: 0
            latestChange:
                type: string
                format: date-time
        required:
        - id
        - exerciseText
        - totalPoints
        - categoryID
    TaskCorrection:
        title: Task Correction
        type: object
        properties:
            taskCorrectionID:
                type: integer
                minimum: 0
            submissionID:
                type: integer
                minimum: 0
            examID:
                type: integer
                minimum: 0
            mark:
                type: number
            comment:
                type: string
            userProposerID:
                type: integer
                minimum: 0
        required:
        - taskCorrectionID
        - submissionID
        - examID
        - mark
        - userProposerID
    TaskCategory:
        title: Task Category
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            name:
                type: string
        required:
        - id
        - name
    User:
        title: User
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            studentNumber:
                type: integer
                minimum: 0
            name:
                type: string
            surname:
                type: string
            average:
                type: number
        required:
        - id
        - studentNumber
    Course:
        title: Course
        description: Specific courses where exams are templated
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            name:
                type: string
            academicYear:
                type: string
                pattern: '^\d{4}\/\d{4}$'
        required:
        - id
        - name
    ExamEvent:
        title: Exam
        description: Describes the exam as an event  with deadlines, templates and statistics related to all marks
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            examTemplateID:
                type: integer
                minimum: 0
            ownersIDs:
                type: array
                items:
                    type: integer
                    minimum: 0
            avgMark:
                type: number
            defaultDeadlineStart:
                type: string
                format: date-time
            defaultDeadlineEnd:
                type: string
                format: date-time
        required:
        - id
        - defaultDeadlineEnd
        - examTemplateID
    ExamTemplate:
        title: Exam Template
        description: Template of an exam, with information such as number of questions for TaskCategory and name.
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            name:
                type: string
            questions:
                type: array
                items:
                    type: object
                    properties:
                        taskCategoryID:
                            type: integer
                            minimum: 0
                        numberOfQuestions:
                            type: integer
                            minimum: 1
        required:
        - id
        - name
        - questions
    ExamInstance:
        title: Exam instance
        description: The instance of an Exam Event, where tasks from a certain task category are given to the user to submit.
        type: object
        properties:
            id:
                type: integer
                minimum: 0
            userIDs:
                type: array
                items:
                    type: integer
                    minimum: 0
            assignedTaskIDs:
                type: array
                items:
                    type: integer
                    minimum: 0
            examEventID:
                type: string
            finalEvaluation:
                type: object
                properties:
                    evaluatorUserID:
                        type: integer
                        minimum: 0
                    finalMark:
                        type: number
                    comment:
                        type: string
        required:
        - id
        - userIDs
        - assignedTaskIDs
        - examEventID
    Submission:
        title: Submission
        type: object
        properties:
            submissionID:
                type: integer
                minimum: 0
            examID:
                type: integer
                minimum: 0
            userID:
                type: integer
                minimum: 0
            assignedTaskID:
                type: integer
                minimum: 0
            userAnswer:
                type: string
            finalCorrectionID:
                type: integer
                minimum: 0
        required:
        - submissionID
        - examID
        - userID
        - assignedTaskID
        - userAnswer
    Error:
        title: Error
        type: object
        properties:
            code:
                type: integer
            message:
                type: string
        required:
        - code
        - message